/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const JSONWebToken: msRest.CompositeMapper = {
  serializedName: "JSONWebToken",
  type: {
    name: "Composite",
    className: "JSONWebToken",
    modelProperties: {
      username: {
        required: true,
        serializedName: "username",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "password",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RefreshJSONWebToken: msRest.CompositeMapper = {
  serializedName: "RefreshJSONWebToken",
  type: {
    name: "Composite",
    className: "RefreshJSONWebToken",
    modelProperties: {
      token: {
        required: true,
        serializedName: "token",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Departament: msRest.CompositeMapper = {
  serializedName: "Departament",
  type: {
    name: "Composite",
    className: "Departament",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 255,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "is_active",
        type: {
          name: "Boolean"
        }
      },
      createdAt: {
        readOnly: true,
        serializedName: "created_at",
        type: {
          name: "DateTime"
        }
      },
      updatedAt: {
        readOnly: true,
        serializedName: "updated_at",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DocumentType: msRest.CompositeMapper = {
  serializedName: "DocumentType",
  type: {
    name: "Composite",
    className: "DocumentType",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 255,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "is_active",
        type: {
          name: "Boolean"
        }
      },
      upload: {
        nullable: true,
        readOnly: true,
        serializedName: "upload",
        type: {
          name: "String"
        }
      },
      createdAt: {
        readOnly: true,
        serializedName: "created_at",
        type: {
          name: "DateTime"
        }
      },
      updatedAt: {
        readOnly: true,
        serializedName: "updated_at",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const User: msRest.CompositeMapper = {
  serializedName: "User",
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      username: {
        required: true,
        serializedName: "username",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      email: {
        required: true,
        serializedName: "email",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "password",
        constraints: {
          MinLength: 8
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Person: msRest.CompositeMapper = {
  serializedName: "Person",
  type: {
    name: "Composite",
    className: "Person",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      firstName: {
        required: true,
        serializedName: "first_name",
        constraints: {
          MaxLength: 255,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondName: {
        nullable: true,
        serializedName: "second_name",
        constraints: {
          MaxLength: 255
        },
        type: {
          name: "String"
        }
      },
      lastName: {
        required: true,
        serializedName: "last_name",
        constraints: {
          MaxLength: 255,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondLastName: {
        nullable: true,
        serializedName: "second_last_name",
        constraints: {
          MaxLength: 255
        },
        type: {
          name: "String"
        }
      },
      identification: {
        nullable: true,
        serializedName: "identification",
        constraints: {
          MaxLength: 255
        },
        type: {
          name: "String"
        }
      },
      email: {
        required: true,
        serializedName: "email",
        constraints: {
          MaxLength: 254,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        nullable: true,
        serializedName: "phone_number",
        constraints: {
          MaxLength: 255
        },
        type: {
          name: "String"
        }
      },
      address: {
        nullable: true,
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "is_active",
        type: {
          name: "Boolean"
        }
      },
      createdAt: {
        readOnly: true,
        serializedName: "created_at",
        type: {
          name: "DateTime"
        }
      },
      updatedAt: {
        readOnly: true,
        serializedName: "updated_at",
        type: {
          name: "DateTime"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "Composite",
          className: "User"
        }
      }
    }
  }
};

export const Procedure: msRest.CompositeMapper = {
  serializedName: "Procedure",
  type: {
    name: "Composite",
    className: "Procedure",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 255,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "is_active",
        type: {
          name: "Boolean"
        }
      },
      createdAt: {
        readOnly: true,
        serializedName: "created_at",
        type: {
          name: "DateTime"
        }
      },
      updatedAt: {
        readOnly: true,
        serializedName: "updated_at",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UserList: msRest.CompositeMapper = {
  serializedName: "UserList",
  type: {
    name: "Composite",
    className: "UserList",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      password: {
        required: true,
        serializedName: "password",
        constraints: {
          MaxLength: 128,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      lastLogin: {
        nullable: true,
        serializedName: "last_login",
        type: {
          name: "DateTime"
        }
      },
      isSuperuser: {
        serializedName: "is_superuser",
        type: {
          name: "Boolean"
        }
      },
      username: {
        required: true,
        serializedName: "username",
        constraints: {
          MaxLength: 150,
          MinLength: 1,
          Pattern: /^[\w.@+-]+$/
        },
        type: {
          name: "String"
        }
      },
      firstName: {
        serializedName: "first_name",
        constraints: {
          MaxLength: 30
        },
        type: {
          name: "String"
        }
      },
      lastName: {
        serializedName: "last_name",
        constraints: {
          MaxLength: 150
        },
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        constraints: {
          MaxLength: 254
        },
        type: {
          name: "String"
        }
      },
      isStaff: {
        serializedName: "is_staff",
        type: {
          name: "Boolean"
        }
      },
      isActive: {
        serializedName: "is_active",
        type: {
          name: "Boolean"
        }
      },
      dateJoined: {
        serializedName: "date_joined",
        type: {
          name: "DateTime"
        }
      },
      groups: {
        serializedName: "groups",
        constraints: {
          UniqueItems: true
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      userPermissions: {
        serializedName: "user_permissions",
        constraints: {
          UniqueItems: true
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const ListOKResponse: msRest.CompositeMapper = {
  serializedName: "ListOKResponse",
  type: {
    name: "Composite",
    className: "ListOKResponse",
    modelProperties: {
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      next: {
        nullable: true,
        serializedName: "next",
        type: {
          name: "String"
        }
      },
      previous: {
        nullable: true,
        serializedName: "previous",
        type: {
          name: "String"
        }
      },
      results: {
        required: true,
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Departament"
            }
          }
        }
      }
    }
  }
};

export const ListOKResponseModel: msRest.CompositeMapper = {
  serializedName: "ListOKResponse",
  type: {
    name: "Composite",
    className: "ListOKResponseModel",
    modelProperties: {
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      next: {
        nullable: true,
        serializedName: "next",
        type: {
          name: "String"
        }
      },
      previous: {
        nullable: true,
        serializedName: "previous",
        type: {
          name: "String"
        }
      },
      results: {
        required: true,
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentType"
            }
          }
        }
      }
    }
  }
};

export const ListOKResponseModelModel: msRest.CompositeMapper = {
  serializedName: "ListOKResponse",
  type: {
    name: "Composite",
    className: "ListOKResponseModelModel",
    modelProperties: {
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      next: {
        nullable: true,
        serializedName: "next",
        type: {
          name: "String"
        }
      },
      previous: {
        nullable: true,
        serializedName: "previous",
        type: {
          name: "String"
        }
      },
      results: {
        required: true,
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Person"
            }
          }
        }
      }
    }
  }
};

export const ListOKResponseModelModelModel: msRest.CompositeMapper = {
  serializedName: "ListOKResponse",
  type: {
    name: "Composite",
    className: "ListOKResponseModelModelModel",
    modelProperties: {
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      next: {
        nullable: true,
        serializedName: "next",
        type: {
          name: "String"
        }
      },
      previous: {
        nullable: true,
        serializedName: "previous",
        type: {
          name: "String"
        }
      },
      results: {
        required: true,
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Procedure"
            }
          }
        }
      }
    }
  }
};
