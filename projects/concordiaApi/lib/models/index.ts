/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing JSONWebToken.
 */
export interface JSONWebToken {
  /**
   * @member {string} username Username.
   */
  username: string;
  /**
   * @member {string} password Password.
   */
  password: string;
}

/**
 * @interface
 * An interface representing RefreshJSONWebToken.
 */
export interface RefreshJSONWebToken {
  /**
   * @member {string} token Token.
   */
  token: string;
}

/**
 * @interface
 * An interface representing Departament.
 */
export interface Departament {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} name Name.
   */
  name: string;
  /**
   * @member {string} description Description.
   */
  description: string;
  /**
   * @member {boolean} [isActive] Is active.
   */
  isActive?: boolean;
  /**
   * @member {Date} [createdAt] Created at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] Updated at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
}

/**
 * @interface
 * An interface representing DocumentType.
 */
export interface DocumentType {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} name Name.
   */
  name: string;
  /**
   * @member {string} description Description.
   */
  description: string;
  /**
   * @member {boolean} [isActive] Is active.
   */
  isActive?: boolean;
  /**
   * @member {string} [upload] Upload. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly upload?: string;
  /**
   * @member {Date} [createdAt] Created at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] Updated at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
}

/**
 * @interface
 * An interface representing User.
 * @summary User
 *
 */
export interface User {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} username Username.
   */
  username: string;
  /**
   * @member {string} email Email.
   */
  email: string;
  /**
   * @member {string} password Password.
   */
  password: string;
}

/**
 * @interface
 * An interface representing Person.
 */
export interface Person {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} firstName First name.
   */
  firstName: string;
  /**
   * @member {string} [secondName] Second name.
   */
  secondName?: string;
  /**
   * @member {string} lastName Last name.
   */
  lastName: string;
  /**
   * @member {string} [secondLastName] Second last name.
   */
  secondLastName?: string;
  /**
   * @member {string} [identification] Identification.
   */
  identification?: string;
  /**
   * @member {string} email Email.
   */
  email: string;
  /**
   * @member {string} [phoneNumber] Phone number.
   */
  phoneNumber?: string;
  /**
   * @member {string} [address] Address.
   */
  address?: string;
  /**
   * @member {boolean} [isActive] Is active.
   */
  isActive?: boolean;
  /**
   * @member {Date} [createdAt] Created at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] Updated at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {User} [user]
   */
  user?: User;
}

/**
 * @interface
 * An interface representing Procedure.
 */
export interface Procedure {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} name Name.
   */
  name: string;
  /**
   * @member {string} description Description.
   */
  description: string;
  /**
   * @member {boolean} [isActive] Is active.
   */
  isActive?: boolean;
  /**
   * @member {Date} [createdAt] Created at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] Updated at. **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
}

/**
 * @interface
 * An interface representing UserList.
 */
export interface UserList {
  /**
   * @member {number} [id] ID. **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly id?: number;
  /**
   * @member {string} password Contraseña.
   */
  password: string;
  /**
   * @member {Date} [lastLogin] Último inicio de sesión.
   */
  lastLogin?: Date;
  /**
   * @member {boolean} [isSuperuser] Es superusuario. Indica que este usuario
   * tiene todos los permisos sin asignárselos explícitamente.
   */
  isSuperuser?: boolean;
  /**
   * @member {string} username Nombre de usuario. Requerido. 150 carácteres
   * como máximo. Únicamente letras, dígitos y @/./+/-/_
   */
  username: string;
  /**
   * @member {string} [firstName] Nombre.
   */
  firstName?: string;
  /**
   * @member {string} [lastName] Apellidos.
   */
  lastName?: string;
  /**
   * @member {string} [email] Dirección de correo electrónico.
   */
  email?: string;
  /**
   * @member {boolean} [isStaff] Es staff. Indica si el usuario puede entrar en
   * este sitio de administración.
   */
  isStaff?: boolean;
  /**
   * @member {boolean} [isActive] Activo. Indica si el usuario debe ser tratado
   * como activo. Desmarque esta opción en lugar de borrar la cuenta.
   */
  isActive?: boolean;
  /**
   * @member {Date} [dateJoined] Fecha de alta.
   */
  dateJoined?: Date;
  /**
   * @member {number[]} [groups] Los grupos a los que pertenece este usuario.
   * Un usuario tendrá todos los permisos asignados a cada uno de sus grupos.
   */
  groups?: number[];
  /**
   * @member {number[]} [userPermissions] Permisos específicos para este
   * usuario.
   */
  userPermissions?: number[];
}

/**
 * @interface
 * An interface representing ListOKResponse.
 */
export interface ListOKResponse {
  /**
   * @member {number} count
   */
  count: number;
  /**
   * @member {string} [next]
   */
  next?: string;
  /**
   * @member {string} [previous]
   */
  previous?: string;
  /**
   * @member {Departament[]} results
   */
  results: Departament[];
}

/**
 * @interface
 * An interface representing ListOKResponseModel.
 */
export interface ListOKResponseModel {
  /**
   * @member {number} count
   */
  count: number;
  /**
   * @member {string} [next]
   */
  next?: string;
  /**
   * @member {string} [previous]
   */
  previous?: string;
  /**
   * @member {DocumentType[]} results
   */
  results: DocumentType[];
}

/**
 * @interface
 * An interface representing ListOKResponseModelModel.
 */
export interface ListOKResponseModelModel {
  /**
   * @member {number} count
   */
  count: number;
  /**
   * @member {string} [next]
   */
  next?: string;
  /**
   * @member {string} [previous]
   */
  previous?: string;
  /**
   * @member {Person[]} results
   */
  results: Person[];
}

/**
 * @interface
 * An interface representing ListOKResponseModelModelModel.
 */
export interface ListOKResponseModelModelModel {
  /**
   * @member {number} count
   */
  count: number;
  /**
   * @member {string} [next]
   */
  next?: string;
  /**
   * @member {string} [previous]
   */
  previous?: string;
  /**
   * @member {Procedure[]} results
   */
  results: Procedure[];
}

/**
 * @interface
 * An interface representing ConcordiaApiOptions.
 * @extends ServiceClientOptions
 */
export interface ConcordiaApiOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing DepartamentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DepartamentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [limit] Number of results to return per page.
   */
  limit?: number;
  /**
   * @member {number} [offset] The initial index from which to return the
   * results.
   */
  offset?: number;
}

/**
 * @interface
 * An interface representing DocumentListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DocumentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [limit] Number of results to return per page.
   */
  limit?: number;
  /**
   * @member {number} [offset] The initial index from which to return the
   * results.
   */
  offset?: number;
}

/**
 * @interface
 * An interface representing PersonListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PersonListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [limit] Number of results to return per page.
   */
  limit?: number;
  /**
   * @member {number} [offset] The initial index from which to return the
   * results.
   */
  offset?: number;
}

/**
 * @interface
 * An interface representing ProcedureListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProcedureListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [limit] Number of results to return per page.
   */
  limit?: number;
  /**
   * @member {number} [offset] The initial index from which to return the
   * results.
   */
  offset?: number;
}

/**
 * Contains response data for the create operation.
 */
export type ApiTokenAuthCreateResponse = JSONWebToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JSONWebToken;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ApiTokenRefreshCreateResponse = RefreshJSONWebToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RefreshJSONWebToken;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DepartamentListResponse = ListOKResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListOKResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DepartamentCreateResponse = Departament & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Departament;
    };
};

/**
 * Contains response data for the read operation.
 */
export type DepartamentReadResponse = Departament & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Departament;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DepartamentUpdateResponse = Departament & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Departament;
    };
};

/**
 * Contains response data for the update1 operation.
 */
export type DepartamentUpdate1Response = Departament & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Departament;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DocumentListResponse = ListOKResponseModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListOKResponseModel;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DocumentCreateResponse = DocumentType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DocumentType;
    };
};

/**
 * Contains response data for the read operation.
 */
export type DocumentReadResponse = DocumentType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DocumentType;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DocumentUpdateResponse = DocumentType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DocumentType;
    };
};

/**
 * Contains response data for the update1 operation.
 */
export type DocumentUpdate1Response = DocumentType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DocumentType;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PersonListResponse = ListOKResponseModelModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListOKResponseModelModel;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PersonCreateResponse = Person & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Person;
    };
};

/**
 * Contains response data for the read operation.
 */
export type PersonReadResponse = Person & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Person;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PersonUpdateResponse = Person & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Person;
    };
};

/**
 * Contains response data for the update1 operation.
 */
export type PersonUpdate1Response = Person & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Person;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProcedureListResponse = ListOKResponseModelModelModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListOKResponseModelModelModel;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ProcedureCreateResponse = Procedure & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Procedure;
    };
};

/**
 * Contains response data for the read operation.
 */
export type ProcedureReadResponse = Procedure & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Procedure;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ProcedureUpdateResponse = Procedure & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Procedure;
    };
};

/**
 * Contains response data for the update1 operation.
 */
export type ProcedureUpdate1Response = Procedure & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Procedure;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RegisterCreateResponse = Person & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Person;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserListResponse = Array<UserList> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList[];
    };
};

/**
 * Contains response data for the create operation.
 */
export type UserCreateResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};

/**
 * Contains response data for the read operation.
 */
export type UserReadResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};

/**
 * Contains response data for the update operation.
 */
export type UserUpdateResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};

/**
 * Contains response data for the update1 operation.
 */
export type UserUpdate1Response = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};
